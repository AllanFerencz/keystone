{"ast":null,"code":"export var useFocus = function useFocus() {\n  if (true && window.document && window.document.createElement) {\n    // Let's make sure we only add the script once\n    var hasScript = document.querySelectorAll('script[id=\"GELFocus\"]').length > 0;\n\n    if (!hasScript) {\n      // Insert a script that:\n      // - adds the \"isMouseMode\" class to the body\n      // - listens for the tab key\n      // - when tab key is pressed removes the \"isMouseMode\" class and removes the listener\n      var scriptEl = document.createElement('script');\n      scriptEl.setAttribute('id', 'GELFocus');\n      scriptEl.text = \"\\n\\t\\t\\t\\tfunction GELKeyHandler( event ) {\\n\\t\\t\\t\\t\\tif( event.key === 'Tab' ) {\\n\\t\\t\\t\\t\\t\\tdocument.getElementsByTagName('body')[ 0 ].classList.remove('isMouseMode');\\n\\t\\t\\t\\t\\t\\tdocument.removeEventListener('keydown', GELKeyHandler);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\tdocument.getElementsByTagName('body')[ 0 ].classList.add('isMouseMode');\\n\\t\\t\\t\\twindow.document.addEventListener('keydown', GELKeyHandler);\\n\\t\\t\\t\";\n      document.body.insertBefore(scriptEl, document.body.firstChild); // Insert CSS style to hide all focus only when the \"isMouseMode\" is present\n\n      var styleEl = document.createElement('style');\n      styleEl.setAttribute('type', 'text/css');\n      styleEl.innerHTML = \"\\n\\t\\t\\t\\t.isMouseMode :focus {\\n\\t\\t\\t\\t\\toutline: 0 !important;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\";\n      document.head.appendChild(styleEl);\n    }\n  }\n};","map":{"version":3,"sources":["/Users/mike/Development/GEL/components/core/src/useFocus.js"],"names":["useFocus","window","document","createElement","hasScript","querySelectorAll","length","scriptEl","setAttribute","text","body","insertBefore","firstChild","styleEl","innerHTML","head","appendChild"],"mappings":"AAAA,OAAO,IAAMA,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAC7B,MAAI,QAAiCC,MAAM,CAACC,QAAxC,IAAoDD,MAAM,CAACC,QAAP,CAAgBC,aAAxE,EAAuF;AACtF;AACA,QAAMC,SAAS,GAAGF,QAAQ,CAACG,gBAAT,CAA0B,uBAA1B,EAAmDC,MAAnD,GAA4D,CAA9E;;AAEA,QAAI,CAACF,SAAL,EAAgB;AACf;AACA;AACA;AACA;AACA,UAAMG,QAAQ,GAAGL,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAjB;AACAI,MAAAA,QAAQ,CAACC,YAAT,CAAsB,IAAtB,EAA4B,UAA5B;AACAD,MAAAA,QAAQ,CAACE,IAAT;AAWAP,MAAAA,QAAQ,CAACQ,IAAT,CAAcC,YAAd,CAA2BJ,QAA3B,EAAqCL,QAAQ,CAACQ,IAAT,CAAcE,UAAnD,EAlBe,CAoBf;;AACA,UAAMC,OAAO,GAAGX,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAhB;AACAU,MAAAA,OAAO,CAACL,YAAR,CAAqB,MAArB,EAA6B,UAA7B;AACAK,MAAAA,OAAO,CAACC,SAAR;AAKAZ,MAAAA,QAAQ,CAACa,IAAT,CAAcC,WAAd,CAA0BH,OAA1B;AACA;AACD;AACD,CApCM","sourcesContent":["export const useFocus = () => {\n\tif (typeof window !== 'undefined' && window.document && window.document.createElement) {\n\t\t// Let's make sure we only add the script once\n\t\tconst hasScript = document.querySelectorAll('script[id=\"GELFocus\"]').length > 0;\n\n\t\tif (!hasScript) {\n\t\t\t// Insert a script that:\n\t\t\t// - adds the \"isMouseMode\" class to the body\n\t\t\t// - listens for the tab key\n\t\t\t// - when tab key is pressed removes the \"isMouseMode\" class and removes the listener\n\t\t\tconst scriptEl = document.createElement('script');\n\t\t\tscriptEl.setAttribute('id', 'GELFocus');\n\t\t\tscriptEl.text = `\n\t\t\t\tfunction GELKeyHandler( event ) {\n\t\t\t\t\tif( event.key === 'Tab' ) {\n\t\t\t\t\t\tdocument.getElementsByTagName('body')[ 0 ].classList.remove('isMouseMode');\n\t\t\t\t\t\tdocument.removeEventListener('keydown', GELKeyHandler);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tdocument.getElementsByTagName('body')[ 0 ].classList.add('isMouseMode');\n\t\t\t\twindow.document.addEventListener('keydown', GELKeyHandler);\n\t\t\t`;\n\t\t\tdocument.body.insertBefore(scriptEl, document.body.firstChild);\n\n\t\t\t// Insert CSS style to hide all focus only when the \"isMouseMode\" is present\n\t\t\tconst styleEl = document.createElement('style');\n\t\t\tstyleEl.setAttribute('type', 'text/css');\n\t\t\tstyleEl.innerHTML = `\n\t\t\t\t.isMouseMode :focus {\n\t\t\t\t\toutline: 0 !important;\n\t\t\t\t}\n\t\t\t`;\n\t\t\tdocument.head.appendChild(styleEl);\n\t\t}\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}