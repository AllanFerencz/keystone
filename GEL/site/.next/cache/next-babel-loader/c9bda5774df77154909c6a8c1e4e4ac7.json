{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useContext, useState } from 'react';\nimport bomBrand from '@westpac/bom';\nimport bsaBrand from '@westpac/bsa';\nimport btfgBrand from '@westpac/btfg';\nimport stgBrand from '@westpac/stg';\nimport wbcBrand from '@westpac/wbc';\nimport wbgBrand from '@westpac/wbg'; // ==============================\n// Get the data\n// ==============================\n\nvar BRANDS = {\n  BOM: bomBrand,\n  BSA: bsaBrand,\n  BTFG: btfgBrand,\n  STG: stgBrand,\n  WBC: wbcBrand,\n  WBG: wbgBrand\n};\nvar BrandSwitcherContext = createContext();\n\nvar BrandSwitcherProvider = function BrandSwitcherProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState('BOM'),\n      _useState2 = _slicedToArray(_useState, 2),\n      brand = _useState2[0],\n      setBrand = _useState2[1];\n\n  return React.createElement(BrandSwitcherContext.Provider, {\n    value: {\n      brands: BRANDS,\n      brand: brand,\n      setBrand: setBrand\n    }\n  }, children);\n};\n\nvar useBrandSwitcher = function useBrandSwitcher() {\n  var context = useContext(BrandSwitcherContext);\n\n  if (!context) {\n    throw new Error('Trying to use the BrandSwitcherContext outside of a <BrandSwitcherProvider>.');\n  }\n\n  return context;\n};\n\nexport { BrandSwitcherProvider, useBrandSwitcher };","map":{"version":3,"sources":["/Users/mike/Development/GEL/website/site/components/providers/brand-switcher/index.js"],"names":["BRANDS","BOM","BSA","BTFG","STG","WBC","WBG","wbgBrand","BrandSwitcherContext","createContext","BrandSwitcherProvider","children","brand","setBrand","useState","brands","useBrandSwitcher","context","useContext"],"mappings":";AAAA,OAAA,KAAA,IAAA,aAAA,EAAA,UAAA,EAAA,QAAA,QAAA,OAAA;AAEA,OAAA,QAAA,MAAA,cAAA;AACA,OAAA,QAAA,MAAA,cAAA;AACA,OAAA,SAAA,MAAA,eAAA;AACA,OAAA,QAAA,MAAA,cAAA;AACA,OAAA,QAAA,MAAA,cAAA;AACA,OAAA,QAAA,MAAA,cAAA,C,CAEA;AACA;AACA;;AAEA,IAAMA,MAAM,GAAG;AACdC,EAAAA,GAAG,EADW,QAAA;AAEdC,EAAAA,GAAG,EAFW,QAAA;AAGdC,EAAAA,IAAI,EAHU,SAAA;AAIdC,EAAAA,GAAG,EAJW,QAAA;AAKdC,EAAAA,GAAG,EALW,QAAA;AAMdC,EAAAA,GAAG,EAAEC;AANS,CAAf;AASA,IAAMC,oBAAoB,GAAGC,aAA7B,EAAA;;AAEA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAA,IAAA,EAAkB;AAAA,MAAfC,QAAe,GAAA,IAAA,CAAfA,QAAe;;AAAA,MAAA,SAAA,GACrBG,QAAQ,CADa,KACb,CADa;AAAA,MAAA,UAAA,GAAA,cAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAA,MACxCF,KADwC,GAAA,UAAA,CAAA,CAAA,CAAA;AAAA,MACjCC,QADiC,GAAA,UAAA,CAAA,CAAA,CAAA;;AAE/C,SACC,KAAA,CAAA,aAAA,CAAC,oBAAD,CAAA,QAAA,EAAA;AACC,IAAA,KAAK,EAAE;AACNE,MAAAA,MAAM,EADA,MAAA;AAENH,MAAAA,KAAK,EAFC,KAAA;AAGNC,MAAAA,QAAQ,EAARA;AAHM;AADR,GAAA,EADD,QACC,CADD;AAFD,CAAA;;AAeA,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC9B,MAAMC,OAAO,GAAGC,UAAU,CAA1B,oBAA0B,CAA1B;;AACA,MAAI,CAAJ,OAAA,EAAc;AACb,UAAM,IAAA,KAAA,CAAN,8EAAM,CAAN;AACA;;AACD,SAAA,OAAA;AALD,CAAA;;AAQA,SAAA,qBAAA,EAAA,gBAAA","sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nimport bomBrand from '@westpac/bom';\nimport bsaBrand from '@westpac/bsa';\nimport btfgBrand from '@westpac/btfg';\nimport stgBrand from '@westpac/stg';\nimport wbcBrand from '@westpac/wbc';\nimport wbgBrand from '@westpac/wbg';\n\n// ==============================\n// Get the data\n// ==============================\n\nconst BRANDS = {\n\tBOM: bomBrand,\n\tBSA: bsaBrand,\n\tBTFG: btfgBrand,\n\tSTG: stgBrand,\n\tWBC: wbcBrand,\n\tWBG: wbgBrand,\n};\n\nconst BrandSwitcherContext = createContext();\n\nconst BrandSwitcherProvider = ({ children }) => {\n\tconst [brand, setBrand] = useState('BOM');\n\treturn (\n\t\t<BrandSwitcherContext.Provider\n\t\t\tvalue={{\n\t\t\t\tbrands: BRANDS,\n\t\t\t\tbrand,\n\t\t\t\tsetBrand,\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</BrandSwitcherContext.Provider>\n\t);\n};\n\nconst useBrandSwitcher = () => {\n\tconst context = useContext(BrandSwitcherContext);\n\tif (!context) {\n\t\tthrow new Error('Trying to use the BrandSwitcherContext outside of a <BrandSwitcherProvider>.');\n\t}\n\treturn context;\n};\n\nexport { BrandSwitcherProvider, useBrandSwitcher };\n"]},"metadata":{},"sourceType":"module"}