{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport weakMemo from '@emotion/weak-memoize';\nimport { useBrand } from './Brand';\nimport facepaint from 'facepaint';\n\nvar minWidth = function minWidth(width) {\n  return \"@media (min-width: \".concat(width, \"px)\");\n};\n\nvar mapBreakpoints = function mapBreakpoints(_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      key = _ref2[0],\n      value = _ref2[1];\n\n  return minWidth(value);\n}; // NOTE: `breakpoints` come through context from the brand via <GEL brand={brand} />\n\n\nvar paint = weakMemo(function (breakpoints) {\n  return facepaint(Object.entries(breakpoints).map(mapBreakpoints));\n});\nexport var useMediaQuery = function useMediaQuery() {\n  var _useBrand = useBrand(),\n      LAYOUT = _useBrand.LAYOUT;\n\n  return paint(LAYOUT.breakpoints);\n};","map":{"version":3,"sources":["/Users/mike/Development/GEL/components/core/src/useMediaQuery.js"],"names":["weakMemo","useBrand","facepaint","minWidth","width","mapBreakpoints","key","value","paint","breakpoints","Object","entries","map","useMediaQuery","LAYOUT"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,uBAArB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,OAAOC,SAAP,MAAsB,WAAtB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK;AAAA,sCAA0BA,KAA1B;AAAA,CAAtB;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA,MAAEC,GAAF;AAAA,MAAOC,KAAP;;AAAA,SAAkBJ,QAAQ,CAACI,KAAD,CAA1B;AAAA,CAAvB,C,CAEA;;;AACA,IAAMC,KAAK,GAAGR,QAAQ,CAAC,UAAAS,WAAW;AAAA,SAAIP,SAAS,CAACQ,MAAM,CAACC,OAAP,CAAeF,WAAf,EAA4BG,GAA5B,CAAgCP,cAAhC,CAAD,CAAb;AAAA,CAAZ,CAAtB;AAEA,OAAO,IAAMQ,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA,kBACfZ,QAAQ,EADO;AAAA,MAC1Ba,MAD0B,aAC1BA,MAD0B;;AAGlC,SAAON,KAAK,CAACM,MAAM,CAACL,WAAR,CAAZ;AACA,CAJM","sourcesContent":["import weakMemo from '@emotion/weak-memoize';\nimport { useBrand } from './Brand';\nimport facepaint from 'facepaint';\n\nconst minWidth = width => `@media (min-width: ${width}px)`;\nconst mapBreakpoints = ([key, value]) => minWidth(value);\n\n// NOTE: `breakpoints` come through context from the brand via <GEL brand={brand} />\nconst paint = weakMemo(breakpoints => facepaint(Object.entries(breakpoints).map(mapBreakpoints)));\n\nexport const useMediaQuery = () => {\n\tconst { LAYOUT } = useBrand();\n\n\treturn paint(LAYOUT.breakpoints);\n};\n"]},"metadata":{},"sourceType":"module"}