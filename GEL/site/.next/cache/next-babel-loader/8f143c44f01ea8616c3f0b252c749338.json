{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useBrand } from './Brand';\nexport var useFonts = function useFonts(_ref) {\n  var path = _ref.path;\n\n  var _useBrand = useBrand(),\n      TYPE = _useBrand.TYPE;\n\n  return {\n    '': TYPE.files[''].map(function (file) {\n      var _file$FontFace = file['@font-face'],\n          src = _file$FontFace.src,\n          rest = _objectWithoutProperties(_file$FontFace, [\"src\"]);\n\n      return {\n        '@font-face': _objectSpread({\n          src: src.replace(/_PATH_/g, path)\n        }, rest)\n      };\n    })\n  };\n};","map":{"version":3,"sources":["/Users/mike/Development/GEL/components/core/src/useFonts.js"],"names":["useBrand","useFonts","path","TYPE","files","map","file","src","rest","replace"],"mappings":";;;;;;;AAAA,SAASA,QAAT,QAAyB,SAAzB;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACpBF,QAAQ,EADY;AAAA,MAC7BG,IAD6B,aAC7BA,IAD6B;;AAGrC,SAAO;AACN,QAAIA,IAAI,CAACC,KAAL,CAAW,EAAX,EAAeC,GAAf,CAAmB,UAAAC,IAAI,EAAI;AAAA,2BACLA,IAAI,CAAC,YAAD,CADC;AAAA,UACtBC,GADsB,kBACtBA,GADsB;AAAA,UACdC,IADc;;AAE9B,aAAO;AAAE;AAAgBD,UAAAA,GAAG,EAAEA,GAAG,CAACE,OAAJ,CAAY,SAAZ,EAAuBP,IAAvB;AAArB,WAAsDM,IAAtD;AAAF,OAAP;AACA,KAHG;AADE,GAAP;AAMA,CATM","sourcesContent":["import { useBrand } from './Brand';\n\nexport const useFonts = ({ path }) => {\n\tconst { TYPE } = useBrand();\n\n\treturn {\n\t\t'': TYPE.files[''].map(file => {\n\t\t\tconst { src, ...rest } = file['@font-face'];\n\t\t\treturn { '@font-face': { src: src.replace(/_PATH_/g, path), ...rest } };\n\t\t}),\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}